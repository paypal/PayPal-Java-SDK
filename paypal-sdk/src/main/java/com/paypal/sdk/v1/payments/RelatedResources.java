// This class was generated on Thu, 29 Mar 2018 19:06:15 UTC by version 0.1.0-dev+2136c8 of Braintree SDK Generator
// RelatedResources.java
// @version 0.1.0-dev+2136c8
// @type object
// @data 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
// DO NOT EDIT
package com.paypal.sdk.v1.payments;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.braintreepayments.http.annotations.*;
/**
 * The payment-related financial transactions, which include sales, authorizations, captures, and refunds. To show resource details, use the resource ID. For example, to [show details for a related authorization](/docs/api/payments/#authorization_get), use the ID returned in the `authorization` object. You can also use the [HATEOAS links](/docs/api/hateoas-links/) for a resource to complete operations for that resource. For example, a `sale` object provides a `refund` link that enables you to refund the sale.
 */
@Model
public class RelatedResources {

    // Required default constructor
    public RelatedResources() {}

	/**
	* The authorization details.
	*/
	@SerializedName("authorization")
	private Authorization authorization;

	public Authorization authorization() { return authorization; }
	
	public RelatedResources authorization(Authorization authorization) {
	    this.authorization = authorization;
	    return this;
	}

	/**
	* The capture transaction details.
	*/
	@SerializedName("capture")
	private Capture capture;

	public Capture capture() { return capture; }
	
	public RelatedResources capture(Capture capture) {
	    this.capture = capture;
	    return this;
	}

	/**
	* The order transaction details.
	*/
	@SerializedName("order")
	private Order order;

	public Order order() { return order; }
	
	public RelatedResources order(Order order) {
	    this.order = order;
	    return this;
	}

	/**
	* The refund details.
	*/
	@SerializedName("refund")
	private Refund refund;

	public Refund refund() { return refund; }
	
	public RelatedResources refund(Refund refund) {
	    this.refund = refund;
	    return this;
	}

	/**
	* The sale transaction details.
	*/
	@SerializedName("sale")
	private Sale sale;

	public Sale sale() { return sale; }
	
	public RelatedResources sale(Sale sale) {
	    this.sale = sale;
	    return this;
	}
}
