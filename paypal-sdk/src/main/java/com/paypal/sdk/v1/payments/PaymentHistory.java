// This class was generated on Mon, 09 Apr 2018 18:13:17 UTC by version 0.1.0-dev+291f3f of Braintree SDK Generator
// PaymentHistory.java
// @version 0.1.0-dev+291f3f
// @type object
// @data 
// DO NOT EDIT
package com.paypal.sdk.v1.payments;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.braintreepayments.http.annotations.*;
/**
 * An array of payments that the seller made.
 */
@Model
public class PaymentHistory {

    // Required default constructor
    public PaymentHistory() {}

	/**
	* The number of items returned in each range of results. Note that the last results range might have fewer items than the requested number of items. The maximum value is `20`.
	*/
	@SerializedName("count")
	private Integer count;

	public Integer count() { return count; }
	
	public PaymentHistory count(Integer count) {
	    this.count = count;
	    return this;
	}

	/**
	* The ID of the next element. Use to get the next range of results.
	*/
	@SerializedName("next_id")
	private String nextId;

	public String nextId() { return nextId; }
	
	public PaymentHistory nextId(String nextId) {
	    this.nextId = nextId;
	    return this;
	}

	/**
	* An array of payments.
	*/
	@SerializedName(value = "payments", listClass = Payment.class)
	private List<Payment> payments;

	public List<Payment> payments() { return payments; }
	
	public PaymentHistory payments(List<Payment> payments) {
	    this.payments = payments;
	    return this;
	}
}
