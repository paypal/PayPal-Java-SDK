// This class was generated on Sat, 07 Apr 2018 21:37:44 UTC by version 0.1.0-dev+843c6b-dirty of Braintree SDK Generator
// SaleGetRequest.java
// @version 0.1.0-dev+843c6b-dirty
// @type request
// @data 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
// DO NOT EDIT
package com.paypal.sdk.v1.payments;

import com.braintreepayments.http.*;
import java.util.*;
import java.util.stream.Collectors;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
/**
 * Shows details for a sale, by ID. Returns only sales that were created through the REST API.
 */
public class SaleGetRequest extends HttpRequest<Sale> {

    public SaleGetRequest(String saleId) {
        super("/v1/payments/sale/{sale_id}?", "GET", Sale.class);
        try {
            path(path().replace("{sale_id}", URLEncoder.encode(String.valueOf(saleId), "UTF-8")));
        } catch (UnsupportedEncodingException ignored) {}
        
        header("Content-Type", "application/json");
    }
    
}
